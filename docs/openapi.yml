openapi: 3.0.3
info:
  title: 工大祭企画情報API
  description: 東京科学大学の学園祭である工大祭の企画情報を提供するAPI
  version: 1.0.0
servers:
  - url: https://api.koudaisai.com/v1
    description: 本番環境
  - url: https://staging-api.koudaisai.com/v1
    description: ステージング環境
  - url: http://localhost:8080/v1/
    description: 開発環境

paths:
  /plans:
    get:
      summary: 全ての企画情報を取得
      description: 工大祭の全ての企画情報を取得します。
      parameters:
        - name: type
          in: query
          description: 企画タイプでフィルタリング（カンマ区切りで複数指定可）
          schema:
            type: array
            items:
              type: string
              enum: [ booth, general, stage, labo ]
          style: form
          explode: false
        - name: recommended
          in: query
          description: おすすめ企画でフィルタリング
          schema:
            type: boolean
        - name: child_friendly
          in: query
          description: 子供向け企画でフィルタリング
          schema:
            type: boolean
        - name: lab_tour
          in: query
          description: 研究室ツアー参加企画でフィルタリング
          schema:
            type: boolean
      responses:
        '200':
          description: 企画情報のリスト
          content:
            application/json:
              schema:
                type: object
                properties:
                  plans:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/BoothPlanRead'
                        - $ref: '#/components/schemas/GeneralPlanRead'
                        - $ref: '#/components/schemas/StagePlanRead'
                        - $ref: '#/components/schemas/LaboPlanRead'
  
  /plans/{planId}:
    get:
      summary: 特定の企画情報を取得
      description: 指定されたIDの企画情報を取得します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      responses:
        '200':
          description: 企画情報
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BoothPlanRead'
                  - $ref: '#/components/schemas/GeneralPlanRead'
                  - $ref: '#/components/schemas/StagePlanRead'
                  - $ref: '#/components/schemas/LaboPlanRead'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/plans/{planId}:
    put:
      summary: 新しい企画を作成
      description: 指定されたIDで新しい企画を作成します。すでに同じIDの企画が存在する場合はconflictエラーを返します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BoothPlanCreate'
                - $ref: '#/components/schemas/GeneralPlanCreate'
                - $ref: '#/components/schemas/StagePlanCreate'
                - $ref: '#/components/schemas/LaboPlanCreate'
      responses:
        '204':
          description: 企画が正常に作成されました
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 指定されたIDの企画が既に存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]
    patch:
      summary: 企画情報を更新
      description: 指定されたIDの企画情報を更新します。企画が存在しない場合は404エラーを返します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BoothPlanUpdate'
                - $ref: '#/components/schemas/GeneralPlanUpdate'
                - $ref: '#/components/schemas/StagePlanUpdate'
                - $ref: '#/components/schemas/LaboPlanUpdate'
      responses:
        '204':
          description: 企画が正常に更新されました
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]
    delete:
      summary: 企画を削除
      description: 指定されたIDの企画を削除します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      responses:
        '204':
          description: 企画が正常に削除されました
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]

  /admin/plans:bulk:
    post:
      summary: 企画の一括作成
      description: 指定されたIDの企画を複数まとめて作成します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: IDと企画のマップ（キーがID、値が企画オブジェクト）
              additionalProperties:
                $ref: '#/components/schemas/BasePlanCreate'
      responses:
        '201':
          description: 企画が正常に一括作成されました
        '207':
          description: 一部の企画作成に失敗しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: 失敗したエントリーのエラー情報
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            plan_id:
                              type: string
                              description: 失敗した企画のID
                          required:
                            - plan_id
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]
    patch:
      summary: 企画の一括更新
      description: 指定されたIDの企画を複数まとめて更新します。存在しない企画IDは無視されます。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: IDと企画更新データのマップ（キーがID、値が企画更新オブジェクト）
              additionalProperties:
                oneOf:
                  - $ref: '#/components/schemas/BoothPlanUpdate'
                  - $ref: '#/components/schemas/GeneralPlanUpdate'
                  - $ref: '#/components/schemas/StagePlanUpdate'
                  - $ref: '#/components/schemas/LaboPlanUpdate'
      responses:
        '204':
          description: 企画が正常に一括更新されました
        '207':
          description: 一部の企画更新に失敗しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: 失敗したエントリーのエラー情報
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            plan_id:
                              type: string
                              description: 失敗した企画のID
                          required:
                            - plan_id
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]


  /plans/{planId}/details:
    get:
      summary: 企画の詳細情報を取得
      description: 指定されたIDの企画の詳細情報を取得します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      responses:
        '200':
          description: 企画詳細情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPlanDetails'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/plans/{planId}/details:
    put:
      summary: 企画の詳細情報を作成・更新
      description: 指定されたIDの企画の詳細情報を作成または完全に更新します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanDetails'
      responses:
        '204':
          description: 詳細情報が正常に作成・更新されました
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]
    patch:
      summary: 企画の詳細情報を部分更新
      description: 指定されたIDの企画の詳細情報を部分的に更新します。
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanDetails'
      responses:
        '204':
          description: 詳細情報が正常に更新されました
        '400':
          description: リクエストが無効です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 企画が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]

  /plans/{planId}/icon:
    get:
      summary: 企画のアイコンを取得
      description: 指定されたIDの企画のアイコン画像を直接ダウンロードします
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      responses:
        '200':
          description: アイコン画像ファイル
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
        '404':
          description: 企画またはアイコンが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/plans/{planId}/icon:
    put:
      summary: 企画のアイコンをアップロード
      description: |-
        指定されたIDの企画のアイコン画像をアップロードします．アップロード時にアイコン画像が最適化されます．
      parameters:
        - name: planId
          in: path
          required: true
          description: 企画ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/gif:
            schema:
              type: string
              format: binary
          image/webp:
            schema:
              type: string
              format: binary
      responses:
        '204':
          description: アイコンが正常にアップロードされました
        '502':
          description: 画像最適化に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]

  /admin/plans/{planId}/icon:import:
    post:
      summary: URLからアイコンをインポート
      description: 指定されたURLからアイコンをダウンロードして企画のアイコンとして設定します
      parameters:
        - name: planId
          in: path
          required: true
          schema:
            type: string
          description: 企画の一意識別子
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: インポートするアイコンのURL
                  example: "https://example.com/icon.png"
      responses:
        '204':
          description: アイコンが正常にインポートされました
        '400':
          description: 無効なリクエスト（URLが無効など）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: アイコンのダウンロードまたは処理に失敗しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - Bearer: [ ]



components:
  schemas:
    IndoorLocation:
      type: object
      required:
        - type
        - building
        - room
      properties:
        type:
          type: string
          enum: [ indoor ]
          description: 企画実施場所が屋内であることを示す
        building:
          type: string
          description: 建物名
        room:
          type: string
          description: 部屋名

    OutdoorLocation:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          enum: [ outdoor ]
          description: 企画実施場所が屋外であることを示す
        name:
          type: string
          description: 企画実施場所の名称

    BoothPlanCategory:
      type: string
      format: enum
      description: |-
        模擬店企画のカテゴリ
        - `main_rice` - ごはん系
        - `main_noodle_flour` - 麺・粉もの系
        - `main_skewer_grill` - 串・焼き物系
        - `main_hot_snack` - ホットフード・軽食系
        - `main_soup` - スープ系
        - `main_world_street` - 世界の屋台フード
        - `sweet_japanese` - 和スイーツ
        - `sweet_western` - 洋スイーツ
        - `sweet_cold` - 冷たいスイーツ
        - `sweet_snack` - スナックスイーツ
        - `sweet_drink` - 飲むスイーツ（デザートドリンク）
        - `sweet_world` - 世界のスイーツ・甘味系屋台フード
        - `drink` - ドリンク系
      enum:
        - main_rice
        - main_noodle_flour
        - main_skewer_grill
        - main_hot_snack
        - main_soup
        - main_world_street
        - sweet_japanese
        - sweet_western
        - sweet_cold
        - sweet_snack
        - sweet_drink
        - sweet_world
        - drink

    GeneralPlanCategory:
      type: string
      format: enum
      description: |-
        一般企画のカテゴリ
        - `play` - 遊び・体験
        - `display` - 展示
        - `performance` - パフォーマンス
        - `cafe` - カフェ
        - `rest` - 一休み
        - `presentation`
      enum:
        - play
        - display
        - performance
        - cafe
        - rest
        - presentation

    BasePlanRead:
      type: object
      required:
        - id
        - type
        - organization_name
        - plan_name
        - description
        - is_child_friendly
        - is_recommended
        - schedule
        - location
      properties:
        id:
          type: string
          description: 企画の一意識別子
        type:
          type: string
          description: 企画のタイプ
        organization_name:
          type: string
          description: 団体名（参加申請時のものを掲載、変更原則なし）
        plan_name:
          type: string
          description: 企画名（企画内容申請時のものを掲載、変更原則なし）
        description:
          type: string
          description: 企画内容紹介文
        is_child_friendly:
          type: boolean
          description: 子供向け企画か否か
        is_recommended:
          type: boolean
          description: おすすめ企画か否か
        schedule:
          type: object
          description: 企画のスケジュール
          properties:
            day1:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "10:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "17:00"
              required:
                - start_time
                - end_time
            day2:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "11:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "16:00"
              required:
                - start_time
                - end_time
        location:
          type: array
          description: 企画実施場所一覧
          items:
            oneOf:
              - $ref: '#/components/schemas/IndoorLocation'
              - $ref: '#/components/schemas/OutdoorLocation'
        coordinates:
          type: object
          nullable: true
          description: 企画の緯度経度座標
          properties:
            latitude:
              type: number
              format: float
              description: 緯度
              minimum: -90
              maximum: 90
            longitude:
              type: number
              format: float
              description: 経度
              minimum: -180
              maximum: 180
          required:
            - latitude
            - longitude

    BasePlanCreate:
      type: object
      required:
        - type
        - organization_name
        - plan_name
        - description
        - is_child_friendly
        - is_recommended
        - schedule
        - location
      properties:
        type:
          type: string
          description: 企画のタイプ
        organization_name:
          type: string
          description: 団体名（参加申請時のものを掲載、変更原則なし）
        plan_name:
          type: string
          description: 企画名（企画内容申請時のものを掲載、変更原則なし）
        description:
          type: string
          description: 企画内容紹介文
        is_child_friendly:
          type: boolean
          description: 子供向け企画か否か
        is_recommended:
          type: boolean
          description: おすすめ企画か否か
        schedule:
          type: object
          description: 企画のスケジュール
          properties:
            day1:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "10:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "17:00"
              required:
                - start_time
                - end_time
            day2:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "11:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "16:00"
              required:
                - start_time
                - end_time
        location:
          type: array
          description: 企画実施場所一覧
          items:
            oneOf:
              - $ref: '#/components/schemas/IndoorLocation'
              - $ref: '#/components/schemas/OutdoorLocation'
        coordinates:
          type: object
          nullable: true
          description: 企画の緯度経度座標
          properties:
            latitude:
              type: number
              format: float
              description: 緯度
              minimum: -90
              maximum: 90
            longitude:
              type: number
              format: float
              description: 経度
              minimum: -180
              maximum: 180
          required:
            - latitude
            - longitude

    BasePlanUpdate:
      type: object
      properties:
        organization_name:
          type: string
          description: 団体名（参加申請時のものを掲載、変更原則なし）
        plan_name:
          type: string
          description: 企画名（企画内容申請時のものを掲載、変更原則なし）
        description:
          type: string
          description: 企画内容紹介文
        is_child_friendly:
          type: boolean
          description: 子供向け企画か否か
        is_recommended:
          type: boolean
          description: おすすめ企画か否か
        schedule:
          type: object
          description: 企画のスケジュール
          properties:
            day1:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "10:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "17:00"
              required:
                - start_time
                - end_time
            day2:
              type: object
              nullable: true
              properties:
                start_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画開始時間（HH:mm形式）
                  example: "11:00"
                end_time:
                  type: string
                  pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'
                  description: 企画終了時間（HH:mm形式）
                  example: "16:00"
              required:
                - start_time
                - end_time
        location:
          type: array
          description: 企画実施場所一覧
          items:
            oneOf:
              - $ref: '#/components/schemas/IndoorLocation'
              - $ref: '#/components/schemas/OutdoorLocation'
        coordinates:
          type: object
          nullable: true
          description: 企画の緯度経度座標
          properties:
            latitude:
              type: number
              format: float
              description: 緯度
              minimum: -90
              maximum: 90
            longitude:
              type: number
              format: float
              description: 経度
              minimum: -180
              maximum: 180
          required:
            - latitude
            - longitude

    CreatePlanDetails:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          description: 当日販売される商品の一覧
          items:
            type: object
            required:
              - name
              - price
              - description
            properties:
              name:
                type: string
                description: 商品名
              price:
                type: integer
                description: 価格
              description:
                type: string
                description: 商品説明
        additional_info:
          type: string
          nullable: true
          description: 追加情報（マークダウン形式）

    ReadPlanDetails:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          description: 当日販売される商品の一覧
          items:
            type: object
            required:
              - name
              - price
              - description
            properties:
              name:
                type: string
                description: 商品名
              price:
                type: integer
                description: 価格
              description:
                type: string
                description: 商品説明
        additional_info:
          type: string
          nullable: true
          description: 追加情報（マークダウン形式）

    UpdatePlanDetails:
      type: object
      properties:
        products:
          type: array
          description: 当日販売される商品の一覧
          items:
            type: object
            properties:
              name:
                type: string
                description: 商品名
              price:
                type: integer
                description: 価格
              description:
                type: string
                description: 商品説明
        additional_info:
          type: string
          nullable: true
          description: 追加情報（マークダウン形式）

    BoothPlanRead:
      allOf:
        - $ref: '#/components/schemas/BasePlanRead'
        - type: object
          required:
            - type
            - categories
          properties:
            id:
              type: string
              pattern: '^M-\d{3}$'
              description: 模擬店企画ID（M-000形式）
            type:
              type: string
              enum: [ booth ]
            categories:
              type: array
              items:
                $ref: '#/components/schemas/BoothPlanCategory'

    BoothPlanCreate:
      allOf:
        - $ref: '#/components/schemas/BasePlanCreate'
        - type: object
          required:
            - type
            - categories
          properties:
            type:
              type: string
              enum: [ booth ]
            categories:
              type: array
              items:
                $ref: '#/components/schemas/BoothPlanCategory'

    BoothPlanUpdate:
      allOf:
        - $ref: '#/components/schemas/BasePlanUpdate'
        - type: object
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/BoothPlanCategory'

    GeneralPlanRead:
      allOf:
        - $ref: '#/components/schemas/BasePlanRead'
        - type: object
          required:
            - type
            - categories
          properties:
            id:
              type: string
              pattern: '^I-\d{3}$'
              description: 一般企画ID（I-000形式）
            type:
              type: string
              enum: [ general ]
            categories:
              type: array
              items:
                $ref: '#/components/schemas/GeneralPlanCategory'
      example:
        id: "I-001"
        type: "general"
        categories: [ "play" ]
        organization_name: "ゲーム制作サークル"
        plan_name: "オリジナルゲーム体験会"
        description: "サークルメンバーが制作したオリジナルゲームを体験できます。"
        is_child_friendly: true
        is_recommended: true
        schedule:
          day1:
            start_time: "10:00"
            end_time: "17:00"
        location:
          - type: "indoor"
            building: "第二校舎"
            room: "2F 201教室"

    GeneralPlanCreate:
      allOf:
        - $ref: '#/components/schemas/BasePlanCreate'
        - type: object
          required:
            - type
            - categories
          properties:
            type:
              type: string
              enum: [ general ]
            categories:
              type: array
              items:
                $ref: '#/components/schemas/GeneralPlanCategory'

    GeneralPlanUpdate:
      allOf:
        - $ref: '#/components/schemas/BasePlanUpdate'
        - type: object
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/GeneralPlanCategory'

    StagePlanRead:
      allOf:
        - $ref: '#/components/schemas/BasePlanRead'
        - type: object
          required:
            - type
          properties:
            id:
              type: string
              pattern: '^S-\d{3}$'
              description: ステージ企画ID（S-000形式）
            type:
              type: string
              enum: [ stage ]
      example:
        id: "S-001"
        type: "stage"
        organization_name: "軽音楽部"
        plan_name: "アコースティックライブ"
        description: "人気曲のカバーと部員によるオリジナル曲の演奏をお届けします。"
        is_child_friendly: true
        is_recommended: true
        schedule:
          day1:
            start_time: "13:00"
            end_time: "14:00"
        location:
          - type: "outdoor"
            name: "中央ステージ"

    StagePlanCreate:
      allOf:
        - $ref: '#/components/schemas/BasePlanCreate'
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [ stage ]

    StagePlanUpdate:
      allOf:
        - $ref: '#/components/schemas/BasePlanUpdate'
        - type: object

    LaboPlanRead:
      allOf:
        - $ref: '#/components/schemas/BasePlanRead'
        - type: object
          required:
            - type
            - is_lab_tour
          properties:
            id:
              type: string
              pattern: '^L-\d{3}$'
              description: 研究室企画ID（L-000形式）
            type:
              type: string
              enum: [ labo ]
            is_lab_tour:
              type: boolean
              description: 研究室ツアー参加企画か否か
      example:
        id: "L-001"
        type: "labo"
        organization_name: "ロボット工学研究室"
        plan_name: "ロボットプログラミング体験"
        description: "最新のロボット技術を体験し、簡単なプログラミングを学べます。"
        is_child_friendly: true
        is_recommended: true
        is_lab_tour: true
        schedule:
          day1:
            start_time: "10:00"
            end_time: "16:00"
        location:
          - type: "indoor"
            building: "工学部棟"
            room: "3F 305研究室"

    LaboPlanCreate:
      allOf:
        - $ref: '#/components/schemas/BasePlanCreate'
        - type: object
          required:
            - type
            - is_lab_tour
          properties:
            type:
              type: string
              enum: [ labo ]
            is_lab_tour:
              type: boolean
              description: 研究室ツアー参加企画か否か

    LaboPlanUpdate:
      allOf:
        - $ref: '#/components/schemas/BasePlanUpdate'
        - type: object
          properties:
            is_lab_tour:
              type: boolean
              description: 研究室ツアー参加企画か否か

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "編集権限"